{"version":3,"sources":["components/GroupsList.js","components/GroupDetail.js","components/GroupsContainer.js","components/EventsList.js","components/EventDetail.js","components/EventsContainer.js","AuthenticatedApp.js","components/Login.js","components/Signup.js","UnauthenticatedApp.js","App.js","reportWebVitals.js","index.js"],"names":["GroupsList","groups","leaveGroup","joinGroup","createGroup","useState","name","setName","location","setLocation","leaveOrJoinButton","group","user_group","onClick","id","map","to","onSubmit","e","preventDefault","htmlFor","type","value","onChange","target","GroupDetail","groupId","setGroup","fetchGroupCallback","useCallback","fetch","credentials","then","res","json","useEffect","members","member","username","events","event","title","GroupsContainer","setGroups","userGroupId","find","method","ok","updatedGroups","undefined","headers","body","JSON","stringify","group_id","errors","Promise","reject","userGroup","exact","path","formData","concat","render","match","params","EventsList","removeRsvpToEvent","cancelEvent","rsvpToEvent","createEvent","now","Date","setMinutes","getMinutes","getTimezoneOffset","setTitle","description","setDescription","toISOString","slice","startTime","setStartTime","endTime","setEndTime","groupName","setGroupName","rsvpOrCancelButton","user_event","cancelEventButton","user_can_modify","start_time","end_time","group_name","htmlfor","list","EventDetail","eventId","setEvent","history","useHistory","fetchEventCallback","handleCancel","push","creator","time","rsvpButton","attendees","attendee","EventsContainer","setEvents","updatedEvents","filter","event_id","userEvent","AuthenticatedApp","currentUser","setCurrentUser","className","Login","setUsername","password","setPassword","user","console","error","Signup","passwordConfirmation","setPasswordConfirmation","password_confirmation","UnauthenticatedApp","App","authChecked","setAuthChecked","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7963b8b7.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction GroupsList({ groups, leaveGroup, joinGroup, createGroup }) {\n  const [name, setName] = useState('')\n  const [location, setLocation] = useState('')\n\n  const leaveOrJoinButton = (group) => {\n    if (group.user_group) {\n      return <button onClick={() => leaveGroup(group.id)}>Leave Group</button>\n    } else {\n      return <button onClick={() => joinGroup(group.id)}>Join Group</button>\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    createGroup({name, location})\n  }\n  \n  return (\n    <div>\n      <h1>Groups</h1>\n      {groups.map(group => (\n        <p><Link to={`groups/${group.id}`}>{group.name}</Link> --- {leaveOrJoinButton(group)}</p>\n      ))}\n      <h3>Add Group</h3>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"name\">Name </label>\n        <input\n          type=\"text\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          name=\"name\"\n        />\n        <label htmlFor=\"name\"> Location </label>\n        <input\n          type=\"text\"\n          value={location}\n          onChange={(e) => setLocation(e.target.value)}\n          name=\"location\"\n        />\n        {\" \"}<button type=\"submit\">Add Group</button>\n      </form>\n    </div>\n  )\n}\n\nexport default GroupsList\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction GroupDetail({ groupId, leaveGroup, joinGroup }) {\n  const [group, setGroup] = useState(null)\n\n  const fetchGroupCallback = useCallback(() => {\n    fetch(`/api/groups/${groupId}`, {\n      credentials: 'include'\n    })\n      .then(res => res.json())\n      .then(group => setGroup(group))\n  }, [groupId])\n  \n  useEffect(() => {\n    fetchGroupCallback()\n  }, [fetchGroupCallback])\n\n  const leaveOrJoinButton = (group) => {\n    if (group.user_group) {\n      return (\n        <button\n          onClick={() => leaveGroup(group.id).then(() => fetchGroupCallback())}\n        >\n          Leave Group\n        </button>\n      )\n    } else {\n      return (\n        <button\n          onClick={() => joinGroup(group.id).then(() => fetchGroupCallback())}\n        >\n          Join Group\n        </button>\n      )\n    }\n  }\n\n  if(!group){ return <div></div>}\n  \n  return (\n    <div>\n      <h1>{group.name}</h1>\n      {leaveOrJoinButton(group)}\n      <h2>Members</h2>\n      <ul>\n        {group.members?.map(member => <li>{member.username}</li>)}\n      </ul>\n      <h2>Events</h2>\n      <ul>\n        {group.events?.map((event) => <li><Link to={`/events/${event.id}`}>{event.title}</Link></li>)}\n      </ul>\n    </div>\n  )\n  \n}\n\nexport default GroupDetail\n","import React, { useState, useEffect } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport GroupsList from './GroupsList'\nimport GroupDetail from './GroupDetail'\n\nfunction GroupsContainer() {\n  const [groups, setGroups] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/api/groups\", {\n      credentials: 'include'\n    })\n      .then(res => res.json())\n      .then(groups => setGroups(groups))\n  }, [])\n\n\n  const leaveGroup = (groupId) => {\n    let userGroupId = groups.find(group => group.id === groupId).user_group.id\n    return fetch(`/api/user_groups/${userGroupId}`, {\n      method: 'DELETE',\n      credentials: 'include'\n    })\n      .then(res => {\n        if (res.ok) {\n          const updatedGroups = groups.map(group => {\n            if (group.id === groupId) {\n              return {\n                ...group,\n                user_group: undefined\n              }\n            } else {\n              return group\n            }\n          })\n          setGroups(updatedGroups)\n        }\n      })\n  }\n\n  const joinGroup = (groupId) => {\n    return fetch('/api/user_groups', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        group_id: groupId\n      })\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json()\n        } else {\n          return res.json().then(errors => Promise.reject(errors))\n        }\n      })\n      .then(userGroup => {\n        const updatedGroups = groups.map(group => {\n          if (group.id === groupId) {\n            return {\n              ...group,\n              user_group: userGroup\n            }\n          } else {\n            return group\n          }\n        })\n        setGroups(updatedGroups)\n      })\n  }\n\n  const createGroup = (formData) => {\n    return fetch(\"/api/groups\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify(formData)\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json()\n        } else {\n          return res.json().then(errors => Promise.reject(errors))\n        }\n      })\n      .then(group => {\n        setGroups(groups.concat(group))\n      })\n  }\n\n  return (\n    <div>\n      <Switch>\n        <Route\n          exact\n          path=\"/groups\"\n        >\n          <GroupsList\n            groups={groups}\n            leaveGroup={leaveGroup}\n            joinGroup={joinGroup}\n            createGroup={createGroup}\n          />\n        </Route>\n        <Route\n          exact\n          path=\"/groups/:id\"\n          render={({ match }) => {\n            return (\n              <GroupDetail\n                groupId={match.params.id}\n                leaveGroup={leaveGroup}\n                joinGroup={joinGroup}\n              />\n            )\n          }}\n        />\n      </Switch>\n    </div>\n  )\n}\n\nexport default GroupsContainer\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction EventsList({ events, groups, removeRsvpToEvent, cancelEvent, rsvpToEvent, createEvent }) {\n  const now = new Date();\n  now.setMinutes(now.getMinutes() - now.getTimezoneOffset());\n  const [title, setTitle] = useState('')\n  const [description, setDescription] = useState('')\n  const [location, setLocation] = useState('')\n  const [startTime, setStartTime] = useState(now.toISOString().slice(0, 16))\n  const [endTime, setEndTime] = useState('')\n  const [groupName, setGroupName] = useState('')\n\n\n  const rsvpOrCancelButton = (event) => {\n    if (event.user_event) {\n      return <button onClick={() => removeRsvpToEvent(event.id)}>Cancel RSVP</button>\n    } else {\n      return <button onClick={() => rsvpToEvent(event.id)}>RSVP for event</button>\n    }\n  }\n\n  const cancelEventButton = (event) => {\n    if (event.user_can_modify) {\n      return <button onClick={() => cancelEvent(event.id)}>Cancel Event</button>\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    createEvent({\n      title,\n      description,\n      location,\n      start_time: startTime,\n      end_time: endTime,\n      group_name: groupName\n    })\n    setTitle('')\n    setDescription('')\n    setLocation('')\n    setStartTime('')\n    setEndTime('')\n    setGroupName('')\n  }\n  \n  return (\n    <div>\n      <h1>Events</h1>\n      {events.map(event => (\n        <p><Link to={`events/${event.id}`}>{event.title}</Link> --- {rsvpOrCancelButton(event)} {event.user_can_modify && '--- '} {cancelEventButton(event)}</p>\n      ))}\n      <h3>Add Event</h3>\n      <form onSubmit={handleSubmit}>\n        <p>\n          <label htmlFor=\"title\">Title </label>\n          <input\n            type=\"text\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            name=\"title\"\n          />\n        </p>\n        <p>\n          <label htmlFor=\"description\"> Description </label>\n          <textarea\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            name=\"description\"\n          />\n        </p>\n        <p>\n          <label htmlFor=\"name\"> Location </label>\n          <input\n            type=\"text\"\n            value={location}\n            onChange={(e) => setLocation(e.target.value)}\n            name=\"location\"\n          />\n        </p>\n        <p>\n          <label htmlFor=\"start_time\"> Start Time </label>\n          <input\n            type=\"datetime-local\"\n            value={startTime}\n            onChange={(e) => setStartTime(e.target.value)}\n            name=\"start_time\"\n          />\n        </p>\n        <p>\n          <label htmlFor=\"end_time\"> End Time </label>\n          <input\n            type=\"datetime-local\"\n            value={endTime}\n            onChange={(e) => setEndTime(e.target.value)}\n            name=\"end_time\"\n          />\n        </p>\n        <p>\n          <label htmlfor=\"group_name\">Group Name </label>\n          <input\n            type=\"text\"\n            name=\"group_name\"\n            value={groupName}\n            list=\"groups\"\n            onChange={(e) => setGroupName(e.target.value)}\n          />\n          <datalist id=\"groups\">\n            {groups.map(group => <option>{group.name}</option>)}\n          </datalist>\n        </p>\n        {\" \"}<button type=\"submit\">Add Event</button>\n      </form>\n    </div>\n  )\n}\n\nexport default EventsList\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\n\nfunction EventDetail({ eventId, removeRsvpToEvent, rsvpToEvent, cancelEvent }) {\n  const [event, setEvent] = useState(null)\n  const history = useHistory();\n\n  const fetchEventCallback = useCallback(\n    () => {\n      fetch(`/api/events/${eventId}`, {\n        credentials: 'include'\n      })\n        .then(res => res.json())\n        .then(event => setEvent(event))\n    },\n    [eventId],\n  )\n\n  useEffect(() => {\n    fetchEventCallback()\n  }, [fetchEventCallback])\n\n\n  const cancelEventButton = (event) => {\n    if (event.user_can_modify) {\n      return (\n        <p>\n          <button\n            onClick={handleCancel}>Cancel Event</button>\n        </p>\n      )\n    }\n  }\n\n  const handleCancel = (e) => {\n    cancelEvent(event.id);\n    history.push('/events')\n  }\n\n  const rsvpButton = (event) => {\n    if (event.user_event) {\n      return (\n        <button\n          onClick={() => {\n            removeRsvpToEvent(event.id).then(() => fetchEventCallback())\n          }\n        }>\n          Cancel RSVP\n        </button >\n      )\n    } else {\n      return (\n        <button\n          onClick={() => {\n            rsvpToEvent(event.id).then(() => fetchEventCallback())\n          }\n        }>\n          RSVP for event\n        </button>\n      )\n    }\n  }\n  \n  if(!event) { return <div></div>}\n  return (\n    <div>\n      <h1>{event.title}</h1>\n      {cancelEventButton(event)}\n      <small>Created by {event.creator} for <Link to={`/groups/${event.group.id}`}>{event.group.name}</Link></small>\n      <p>{event.description}</p>\n      <p>{event.time}</p>\n      <p>Location: {event.location}</p>\n      <p>{rsvpButton(event)}</p>\n      <ul>\n        {event.attendees.map(attendee => (\n          <li>{attendee.username}</li>\n        ))}\n      </ul>\n\n\n    </div>\n  )\n}\n\nexport default EventDetail\n","import React, { useState, useEffect } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport EventsList from './EventsList'\nimport EventDetail from './EventDetail'\n\nfunction EventsContainer() {\n  const [events, setEvents] = useState([])\n  const [groups, setGroups] = useState([])\n  \n  useEffect(() => {\n    fetch(`/api/events`, {\n      credentials: 'include'\n    })\n      .then(res => res.json())\n      .then(events => setEvents(events))\n    fetch(`/api/groups`, {\n      credentials: 'include'\n    })\n      .then(res => res.json())\n      .then(groups => setGroups(groups))\n  },[])\n\n  const removeRsvpToEvent = (eventId) => {\n    const event = events.find(event => event.id === eventId)\n    return fetch(`/api/user_events/${event.user_event.id}`, {\n      method: \"DELETE\",\n      credentials: 'include'\n    })\n      .then(res => {\n        if (res.ok) {\n          // if the event is the one we just removed an rsvp \n          // for, set its user_event property in state to \n          // undefined; If not, leave the event as it is\n          const updatedEvents = events.map((event) => {\n            if (event.id === eventId) {\n              return {\n                ...event,\n                user_event: undefined\n              }\n            } else {\n              return event\n            }\n          })\n          setEvents(updatedEvents)\n        }\n      })\n  }\n\n  const cancelEvent = (eventId) => {\n    return fetch(`/api/events/${eventId}`, {\n      method: \"DELETE\",\n      credentials: 'include'\n    })\n      .then(res => {\n        if (res.ok) {\n          const updatedEvents = events.filter(event => event.id !== eventId)\n          setEvents(updatedEvents)\n        }\n      })\n  }\n  const rsvpToEvent = (eventId) => {\n    return fetch('/api/user_events', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        event_id: eventId\n      })\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json()\n        } else {\n          return res.json().then(errors => Promise.reject(errors))\n        }\n      })\n      .then(userEvent => {\n        // if the event is the one we just rsvp'd to\n        // add a user_event property in state and set\n        // it to the userEvent; if not, leave it as is\n        const updatedEvents = events.map((event) => {\n          if (event.id === eventId) {\n            return {\n              ...event,\n              user_event: userEvent\n            }\n          } else {\n            return event\n          }\n        })\n        setEvents(updatedEvents)\n      })\n  }\n\n  const createEvent = (formData) => {\n    return fetch(\"/api/events\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: 'include',\n      body: JSON.stringify(formData)\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json()\n        } else {\n          return res.json().then(errors => Promise.reject(errors))\n        }\n      })\n      .then(event => {\n        setEvents(events.concat(event))\n      })\n  }\n\n  return (\n    <div>\n      <Switch>\n        <Route\n          exact\n          path=\"/events\"\n        >\n          <EventsList\n            events={events}\n            groups={groups}\n            cancelEvent={cancelEvent}\n            removeRsvpToEvent={removeRsvpToEvent}\n            rsvpToEvent={rsvpToEvent}\n            createEvent={createEvent}\n          />\n        </Route>\n        <Route\n          exact\n          path=\"/events/:id\"\n          render={({ match }) => {\n            return <EventDetail\n              eventId={match.params.id}\n              cancelEvent={cancelEvent}\n              removeRsvpToEvent={removeRsvpToEvent}\n              rsvpToEvent={rsvpToEvent}\n            />\n          }}\n        />\n      </Switch>\n    </div>\n  )\n}\n\nexport default EventsContainer\n","import './App.css';\nimport GroupsContainer from './components/GroupsContainer'\nimport EventsContainer from './components/EventsContainer'\nimport { Switch, Route, NavLink, Redirect, useHistory } from 'react-router-dom'\n\nfunction AuthenticatedApp({ currentUser, setCurrentUser }) {\n  const history = useHistory()\n  \n  const handleLogout = () => {\n    fetch(`/api/logout`, {\n      method: 'DELETE',\n      credentials: 'include'\n    })\n      .then(res => {\n        if (res.ok) {\n          setCurrentUser(null)\n          history.push('/')\n        }\n      })\n  }\n  return (\n    <div className=\"App\">\n      <nav>\n        <span>\n          <NavLink to=\"/groups\">Groups</NavLink>{\" - \"}\n          <NavLink to=\"/events\">Events</NavLink>\n        </span>\n        <span>Logged in as {currentUser.username} <button onClick={handleLogout}>Logout</button></span>\n      </nav>\n      <Switch>\n        <Route path=\"/groups\">\n          <GroupsContainer />\n        </Route>\n        <Route path=\"/events\">\n          <EventsContainer />\n        </Route>\n        <Redirect to=\"/groups\" />\n      </Switch>\n    </div>\n  );\n}\n\nexport default AuthenticatedApp;\n","import React, { useState } from 'react'\nimport { Redirect, useHistory, Link } from 'react-router-dom'\n\nfunction Login({ setCurrentUser }) {\n  const history = useHistory()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  \n  const handleSubmit = (event) => {\n    event.preventDefault()\n    fetch('/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({username, password})\n    })\n      .then(res => {\n        if (res.ok) {\n          res.json().then(user => {\n            setCurrentUser(user)\n            history.push('/groups')\n          })\n        } else {\n          res.json().then(errors => {\n            console.error(errors)\n          })\n        }\n      })\n  }\n  return (\n    <div className=\"authForm\">\n      <Redirect to=\"/\" />\n      <form onSubmit={handleSubmit}>\n        <h1>Log In</h1>\n        <p>\n          <label \n            htmlFor=\"username\"\n          >\n            Username\n          </label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </p>\n        <p>\n          <label \n            htmlFor=\"password\"\n          >\n            Password\n          </label>\n          <input\n            type=\"password\"\n            name=\"\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </p>\n        <p><button type=\"submit\">Log In</button></p>\n        <p>-- or --</p>\n        <p><Link to=\"/signup\">Sign Up</Link></p>\n      </form>\n    </div>\n  )\n}\n\nexport default Login\n","import React, { useState } from 'react'\nimport { useHistory, Link } from 'react-router-dom'\n\nfunction Signup({ setCurrentUser }) {\n  const history = useHistory()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordConfirmation, setPasswordConfirmation] = useState('')\n  \n  const handleSubmit = (event) => {\n    event.preventDefault()\n    fetch('/api/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password,\n        password_confirmation: passwordConfirmation\n      })\n    })\n      .then(res => {\n        if (res.ok) {\n          res.json().then(user => {\n            setCurrentUser(user)\n            history.push('/groups')\n          })\n        } else {\n          setCurrentUser({ username: \"Dakota\" })\n          history.push('/groups')\n          res.json().then(errors => {\n            console.error(errors)\n          })\n        }\n      })\n  }\n  return (\n    <div className=\"authForm\">\n      <form onSubmit={handleSubmit}>\n        <h1>Sign Up</h1>\n        <p>\n          <label \n            htmlFor=\"username\"\n          >\n            Username\n          </label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </p>\n        <p>\n          <label \n            htmlFor=\"password\"\n          >\n            Password\n          </label>\n          <input\n            type=\"password\"\n            name=\"\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </p>\n        <p>\n          <label \n            htmlFor=\"password_confirmation\"\n          >\n            Password Confirmation\n          </label>\n          <input\n            type=\"password\"\n            name=\"password_confirmation\"\n            value={passwordConfirmation}\n            onChange={(e) => setPasswordConfirmation(e.target.value)}\n          />\n        </p>\n        <p><button type=\"submit\">Sign Up</button></p>\n        <p>-- or --</p>\n        <p><Link to=\"/\">Log In</Link></p>\n      </form>\n    </div>\n  )\n}\n\nexport default Signup\n","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport Login from './components/Login'\nimport Signup from './components/Signup'\n\nfunction UnauthenticatedApp({ setCurrentUser }) {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Login setCurrentUser={setCurrentUser} />\n      </Route>\n      <Route exact path=\"/signup\">\n        <Signup setCurrentUser={setCurrentUser}/>\n      </Route>\n      <Redirect to=\"/\" />\n    </Switch>\n  )\n}\n\nexport default UnauthenticatedApp\n","import React, { useState, useEffect } from 'react'\nimport AuthenticatedApp from './AuthenticatedApp'\nimport UnauthenticatedApp from './UnauthenticatedApp'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null)\n  const [authChecked, setAuthChecked] = useState(false)\n\n  useEffect(() => {\n    fetch('/api/me', {\n      credentials: 'include'\n    })\n      .then(res => {\n        if (res.ok) {\n          res.json().then((user) => {\n            setCurrentUser(user)\n            setAuthChecked(true)\n          })\n        } else {\n          setAuthChecked(true)\n        }\n      })\n  }, [])\n\n  if(!authChecked) { return <div></div>}\n  return (\n    <Router>\n      {currentUser ? (\n          <AuthenticatedApp\n            setCurrentUser={setCurrentUser}\n            currentUser={currentUser}\n          />\n        ) : (\n          <UnauthenticatedApp\n            setCurrentUser={setCurrentUser}\n          />\n        )\n      }\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}